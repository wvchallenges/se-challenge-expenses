spring.http.multipart.max-file-size=2MB
spring.http.multipart.max-request-size=10MB
server.port=8096

spring.messages.basename=locale/messages
spring.messages.cache-seconds=-1
spring.messages.encoding=UTF-8
org.springframework.web.servlet.i18n.SessionLocaleResolver.defaultLocale = en_US

spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://mysql:3306/expenses
spring.datasource.username=expenses_user
spring.datasource.password=expenses_pass

# Show or not log for each sql query
spring.jpa.show-sql = true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


sql.monthly_expenses=SELECT INSERT_ID, \
                        YEAR(expense_date) as 'year', \
                        MONTH(expense_date) as 'month', \
                        SUM(pre_tax_amount) AS 'pre_tax_amount', \
                        SUM(tax_amount) AS 'tax_amount', \
                        SUM(tax_amount + pre_tax_amount) AS 'total' \
                        FROM EXPENSE \
                        WHERE INSERT_ID = :id \
                        GROUP BY YEAR(expense_date), MONTH(expense_date) \
                        ORDER BY YEAR(expense_date), MONTH(expense_date)
